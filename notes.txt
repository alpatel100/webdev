//############ # Node - Express

var express = require("express");
var app = express();
var bodyParser = require("body-parser");  // to parse the incoming form data from body to object
app.use(bodyParser.urlencoded({extended:true}));
app.set("view engine", "ejs");  // use ejs extention for all embedded js file in /views directory

// root route
app.get("/", function(req,res) {
  res.render("home");
});

// Port
app.listen(3000, function() {
  console.log("Server has started...");
});

app.listen(process.env.PORT, process.env.IP, function() {
  console.log("YelpCamp server started !!");
});

// request
var request = require('request'); // to request HTTP web page request


//############# Mongo DB ####
MongoDB installed and running on c9
1. $ sudo apt-get install -y mongodb-org
2. $ mkdir data
3. $ echo 'mongod --bind_ip=$IP --dbpath=data --nojournal --rest "$@"' > mongod
4. $ chmod a+x mongod
5. $ ./mongodb

If you leave it running then Cloud 9 could time out and cause mongo to crash. If this happens, try the following to repair it.
From the command line, run:
cd ~
./mongod --repair
If you're still having trouble then you may need to use the --repairpath <path> option, you can read about how it works here (https://docs.mongodb.org/manual/reference/command/repairDatabase/#behavior).


on command line:
1. show dbs
2. use <database>
3. show collections
4. db.<collection>.find()

//############# Mongoose #### ODM - Object Data Mapper
First be sure you have MongoDB and Node.js installed.

-> include mongoose in our project
var mongoose = require('mongoose');
mongoose.connect('mongodb://localhost/test');

-> 
var kittySchema = mongoose.Schema({
    name: String
});

-> 
var Kitten = mongoose.model('Kitten', kittySchema);

-> 
var silence = new Kitten({ name: 'Silence' });
console.log(silence.name); // 'Silence'

->
// NOTE: methods must be added to the schema before compiling it with mongoose.model()
kittySchema.methods.speak = function () {
  var greeting = this.name
    ? "Meow name is " + this.name
    : "I don't have a name";
  console.log(greeting);
}
var Kitten = mongoose.model('Kitten', kittySchema);

var fluffy = new Kitten({ name: 'fluffy' }); // created model instance 

-> // property on model instance 
fluffy.save(function (err, fluffy) {
  if (err) return console.error(err);
  fluffy.speak();
});

-> // property on Model 
Kitten.create({ name: 'monty'}, function (err, fluffy) {
  if (err) return console.error(err);
  console.log("monty created in database");
});

->  // property on Model
Kitten.find(function (err, kittens) {
  if (err) return console.error(err);
  console.log(kittens);
})

->
Kitten.find({ name: /^fluff/ }, callback);

//############# GIT HUB ####
--> git remote add origin https://github.com/alpatel100/webdev.git


